// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: recipe.proto

package hipstershop

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddRecipeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecipeText    string                 `protobuf:"bytes,2,opt,name=recipe_text,json=recipeText,proto3" json:"recipe_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecipeRequest) Reset() {
	*x = AddRecipeRequest{}
	mi := &file_recipe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecipeRequest) ProtoMessage() {}

func (x *AddRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecipeRequest.ProtoReflect.Descriptor instead.
func (*AddRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{0}
}

func (x *AddRecipeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddRecipeRequest) GetRecipeText() string {
	if x != nil {
		return x.RecipeText
	}
	return ""
}

type AddRecipeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRecipeResponse) Reset() {
	*x = AddRecipeResponse{}
	mi := &file_recipe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecipeResponse) ProtoMessage() {}

func (x *AddRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecipeResponse.ProtoReflect.Descriptor instead.
func (*AddRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{1}
}

func (x *AddRecipeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddRecipeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// NEW: Recipe browsing messages
type ListRecipesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecipesRequest) Reset() {
	*x = ListRecipesRequest{}
	mi := &file_recipe_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecipesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesRequest) ProtoMessage() {}

func (x *ListRecipesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesRequest.ProtoReflect.Descriptor instead.
func (*ListRecipesRequest) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{2}
}

type GetRecipeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipeId      string                 `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecipeRequest) Reset() {
	*x = GetRecipeRequest{}
	mi := &file_recipe_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeRequest) ProtoMessage() {}

func (x *GetRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeRequest.ProtoReflect.Descriptor instead.
func (*GetRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{3}
}

func (x *GetRecipeRequest) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

type SuggestedRecipesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CartItems     []string               `protobuf:"bytes,1,rep,name=cart_items,json=cartItems,proto3" json:"cart_items,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // for caching
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestedRecipesRequest) Reset() {
	*x = SuggestedRecipesRequest{}
	mi := &file_recipe_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestedRecipesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestedRecipesRequest) ProtoMessage() {}

func (x *SuggestedRecipesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestedRecipesRequest.ProtoReflect.Descriptor instead.
func (*SuggestedRecipesRequest) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestedRecipesRequest) GetCartItems() []string {
	if x != nil {
		return x.CartItems
	}
	return nil
}

func (x *SuggestedRecipesRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ProcessRecipeRequestMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                   // Natural language input (existing)
	RecipeId      string                 `protobuf:"bytes,2,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"` // Recipe ID for structured recipes (new)
	Servings      int32                  `protobuf:"varint,3,opt,name=servings,proto3" json:"servings,omitempty"`                // Desired servings (new)
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // User ID for cart operations (new)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessRecipeRequestMessage) Reset() {
	*x = ProcessRecipeRequestMessage{}
	mi := &file_recipe_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRecipeRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRecipeRequestMessage) ProtoMessage() {}

func (x *ProcessRecipeRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRecipeRequestMessage.ProtoReflect.Descriptor instead.
func (*ProcessRecipeRequestMessage) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessRecipeRequestMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessRecipeRequestMessage) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

func (x *ProcessRecipeRequestMessage) GetServings() int32 {
	if x != nil {
		return x.Servings
	}
	return 0
}

func (x *ProcessRecipeRequestMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ProcessRecipeResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Success              bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MatchedProducts      []string               `protobuf:"bytes,3,rep,name=matched_products,json=matchedProducts,proto3" json:"matched_products,omitempty"`
	Ingredients          []string               `protobuf:"bytes,4,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	UnmatchedIngredients []string               `protobuf:"bytes,5,rep,name=unmatched_ingredients,json=unmatchedIngredients,proto3" json:"unmatched_ingredients,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProcessRecipeResponse) Reset() {
	*x = ProcessRecipeResponse{}
	mi := &file_recipe_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRecipeResponse) ProtoMessage() {}

func (x *ProcessRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRecipeResponse.ProtoReflect.Descriptor instead.
func (*ProcessRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessRecipeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessRecipeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessRecipeResponse) GetMatchedProducts() []string {
	if x != nil {
		return x.MatchedProducts
	}
	return nil
}

func (x *ProcessRecipeResponse) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *ProcessRecipeResponse) GetUnmatchedIngredients() []string {
	if x != nil {
		return x.UnmatchedIngredients
	}
	return nil
}

type Recipe struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RecipeId        string                 `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DefaultServings int32                  `protobuf:"varint,4,opt,name=default_servings,json=defaultServings,proto3" json:"default_servings,omitempty"`
	CookTime        string                 `protobuf:"bytes,5,opt,name=cook_time,json=cookTime,proto3" json:"cook_time,omitempty"`
	Ingredients     []*Ingredient          `protobuf:"bytes,6,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Instructions    []string               `protobuf:"bytes,7,rep,name=instructions,proto3" json:"instructions,omitempty"`
	ImageData       string                 `protobuf:"bytes,8,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // Base64 encoded image data
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_recipe_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{7}
}

func (x *Recipe) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

func (x *Recipe) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Recipe) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Recipe) GetDefaultServings() int32 {
	if x != nil {
		return x.DefaultServings
	}
	return 0
}

func (x *Recipe) GetCookTime() string {
	if x != nil {
		return x.CookTime
	}
	return ""
}

func (x *Recipe) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Recipe) GetInstructions() []string {
	if x != nil {
		return x.Instructions
	}
	return nil
}

func (x *Recipe) GetImageData() string {
	if x != nil {
		return x.ImageData
	}
	return ""
}

type Ingredient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity      float32                `protobuf:"fixed32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit          string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ingredient) Reset() {
	*x = Ingredient{}
	mi := &file_recipe_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredient) ProtoMessage() {}

func (x *Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredient.ProtoReflect.Descriptor instead.
func (*Ingredient) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{8}
}

func (x *Ingredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ingredient) GetQuantity() float32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Ingredient) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type ListRecipesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipes       []*Recipe              `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecipesResponse) Reset() {
	*x = ListRecipesResponse{}
	mi := &file_recipe_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecipesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecipesResponse) ProtoMessage() {}

func (x *ListRecipesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecipesResponse.ProtoReflect.Descriptor instead.
func (*ListRecipesResponse) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{9}
}

func (x *ListRecipesResponse) GetRecipes() []*Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

type GetRecipeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipe        *Recipe                `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecipeResponse) Reset() {
	*x = GetRecipeResponse{}
	mi := &file_recipe_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeResponse) ProtoMessage() {}

func (x *GetRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeResponse.ProtoReflect.Descriptor instead.
func (*GetRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_proto_rawDescGZIP(), []int{10}
}

func (x *GetRecipeResponse) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

var File_recipe_proto protoreflect.FileDescriptor

const file_recipe_proto_rawDesc = "" +
	"\n" +
	"\frecipe.proto\x12\x06recipe\"L\n" +
	"\x10AddRecipeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vrecipe_text\x18\x02 \x01(\tR\n" +
	"recipeText\"G\n" +
	"\x11AddRecipeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x14\n" +
	"\x12ListRecipesRequest\"/\n" +
	"\x10GetRecipeRequest\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\"W\n" +
	"\x17SuggestedRecipesRequest\x12\x1d\n" +
	"\n" +
	"cart_items\x18\x01 \x03(\tR\tcartItems\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"\x89\x01\n" +
	"\x1bProcessRecipeRequestMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1b\n" +
	"\trecipe_id\x18\x02 \x01(\tR\brecipeId\x12\x1a\n" +
	"\bservings\x18\x03 \x01(\x05R\bservings\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\"\xcd\x01\n" +
	"\x15ProcessRecipeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\x10matched_products\x18\x03 \x03(\tR\x0fmatchedProducts\x12 \n" +
	"\vingredients\x18\x04 \x03(\tR\vingredients\x123\n" +
	"\x15unmatched_ingredients\x18\x05 \x03(\tR\x14unmatchedIngredients\"\x9e\x02\n" +
	"\x06Recipe\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12)\n" +
	"\x10default_servings\x18\x04 \x01(\x05R\x0fdefaultServings\x12\x1b\n" +
	"\tcook_time\x18\x05 \x01(\tR\bcookTime\x124\n" +
	"\vingredients\x18\x06 \x03(\v2\x12.recipe.IngredientR\vingredients\x12\"\n" +
	"\finstructions\x18\a \x03(\tR\finstructions\x12\x1d\n" +
	"\n" +
	"image_data\x18\b \x01(\tR\timageData\"P\n" +
	"\n" +
	"Ingredient\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x02R\bquantity\x12\x12\n" +
	"\x04unit\x18\x03 \x01(\tR\x04unit\"?\n" +
	"\x13ListRecipesResponse\x12(\n" +
	"\arecipes\x18\x01 \x03(\v2\x0e.recipe.RecipeR\arecipes\";\n" +
	"\x11GetRecipeResponse\x12&\n" +
	"\x06recipe\x18\x01 \x01(\v2\x0e.recipe.RecipeR\x06recipe2\x8c\x03\n" +
	"\rRecipeService\x12@\n" +
	"\tAddRecipe\x12\x18.recipe.AddRecipeRequest\x1a\x19.recipe.AddRecipeResponse\x12F\n" +
	"\vListRecipes\x12\x1a.recipe.ListRecipesRequest\x1a\x1b.recipe.ListRecipesResponse\x12@\n" +
	"\tGetRecipe\x12\x18.recipe.GetRecipeRequest\x1a\x19.recipe.GetRecipeResponse\x12S\n" +
	"\x13GetSuggestedRecipes\x12\x1f.recipe.SuggestedRecipesRequest\x1a\x1b.recipe.ListRecipesResponse\x12Z\n" +
	"\x14ProcessRecipeRequest\x12#.recipe.ProcessRecipeRequestMessage\x1a\x1d.recipe.ProcessRecipeResponseBUZSgithub.com/GoogleCloudPlatform/microservices-demo/src/frontend/genproto;hipstershopb\x06proto3"

var (
	file_recipe_proto_rawDescOnce sync.Once
	file_recipe_proto_rawDescData []byte
)

func file_recipe_proto_rawDescGZIP() []byte {
	file_recipe_proto_rawDescOnce.Do(func() {
		file_recipe_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_recipe_proto_rawDesc), len(file_recipe_proto_rawDesc)))
	})
	return file_recipe_proto_rawDescData
}

var file_recipe_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_recipe_proto_goTypes = []any{
	(*AddRecipeRequest)(nil),            // 0: recipe.AddRecipeRequest
	(*AddRecipeResponse)(nil),           // 1: recipe.AddRecipeResponse
	(*ListRecipesRequest)(nil),          // 2: recipe.ListRecipesRequest
	(*GetRecipeRequest)(nil),            // 3: recipe.GetRecipeRequest
	(*SuggestedRecipesRequest)(nil),     // 4: recipe.SuggestedRecipesRequest
	(*ProcessRecipeRequestMessage)(nil), // 5: recipe.ProcessRecipeRequestMessage
	(*ProcessRecipeResponse)(nil),       // 6: recipe.ProcessRecipeResponse
	(*Recipe)(nil),                      // 7: recipe.Recipe
	(*Ingredient)(nil),                  // 8: recipe.Ingredient
	(*ListRecipesResponse)(nil),         // 9: recipe.ListRecipesResponse
	(*GetRecipeResponse)(nil),           // 10: recipe.GetRecipeResponse
}
var file_recipe_proto_depIdxs = []int32{
	8,  // 0: recipe.Recipe.ingredients:type_name -> recipe.Ingredient
	7,  // 1: recipe.ListRecipesResponse.recipes:type_name -> recipe.Recipe
	7,  // 2: recipe.GetRecipeResponse.recipe:type_name -> recipe.Recipe
	0,  // 3: recipe.RecipeService.AddRecipe:input_type -> recipe.AddRecipeRequest
	2,  // 4: recipe.RecipeService.ListRecipes:input_type -> recipe.ListRecipesRequest
	3,  // 5: recipe.RecipeService.GetRecipe:input_type -> recipe.GetRecipeRequest
	4,  // 6: recipe.RecipeService.GetSuggestedRecipes:input_type -> recipe.SuggestedRecipesRequest
	5,  // 7: recipe.RecipeService.ProcessRecipeRequest:input_type -> recipe.ProcessRecipeRequestMessage
	1,  // 8: recipe.RecipeService.AddRecipe:output_type -> recipe.AddRecipeResponse
	9,  // 9: recipe.RecipeService.ListRecipes:output_type -> recipe.ListRecipesResponse
	10, // 10: recipe.RecipeService.GetRecipe:output_type -> recipe.GetRecipeResponse
	9,  // 11: recipe.RecipeService.GetSuggestedRecipes:output_type -> recipe.ListRecipesResponse
	6,  // 12: recipe.RecipeService.ProcessRecipeRequest:output_type -> recipe.ProcessRecipeResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_recipe_proto_init() }
func file_recipe_proto_init() {
	if File_recipe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_recipe_proto_rawDesc), len(file_recipe_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recipe_proto_goTypes,
		DependencyIndexes: file_recipe_proto_depIdxs,
		MessageInfos:      file_recipe_proto_msgTypes,
	}.Build()
	File_recipe_proto = out.File
	file_recipe_proto_goTypes = nil
	file_recipe_proto_depIdxs = nil
}
